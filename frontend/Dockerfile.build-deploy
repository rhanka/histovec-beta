FROM node:11-slim
ARG http_proxy
ARG https_proxy
ARG no_proxy
ARG npm_registry
ARG sass_registry
ARG MIRROR_DEBIAN
ARG app_path
ARG app_name
ARG app_ver
ENV APP ${APP}
ENV APP_VERSION ${APP_VERSION}

# update debian w/proxy & mirror
RUN echo "$http_proxy $no_proxy" && set -x && [ -z "$MIRROR_DEBIAN" ] || \
    sed -i.orig -e "s|http://deb.debian.org\([^[:space:]]*\)|$MIRROR_DEBIAN/debian9|g ; s|http://security.debian.org\([^[:space:]]*\)|$MIRROR_DEBIAN/debian9-security|g" /etc/apt/sources.list ; \
    apt-get update -qq

WORKDIR /$app_path
COPY package.json.template .
RUN cat package.json.template | sed "s/<APP>/${app_name}/;s/<VERSION>/${app_ver}/" > package.json

# use proxy & private npm registry
RUN if [ ! -z "$http_proxy" ] ; then \
        npm config delete proxy; \
        npm config set proxy $http_proxy; \
        npm config set https-proxy $https_proxy ; \
        npm config set no-proxy $no_proxy; \
   fi ; \
   [ -z "$npm_registry" ] || npm config set registry=$npm_registry; \
   [ -z "$sass_registry" ] || npm config set sass_binary_site=$sass_registry;

RUN npm config `echo $proxy | sed 's/^$/delete proxy/;s/\(\S\S*\)/set proxy \1/'`
RUN npm i npm@latest -g
RUN npm install
RUN npm audit fix --registry=https://registry.npmjs.org

COPY ${app_name}-${app_ver}-frontend.tar.gz /
RUN  set -ex ; tar -zxvf /${app_name}-${app_ver}-frontend.tar.gz -C /${app_path}  && \
     npm run build 2>&1 | tee npm.log; egrep -E '(ERROR|error)' npm.log && exit 1 ; rm -rf npm.log \
     rm -rf /${app_name}-${app_ver}-frontend.tar.gz

EXPOSE 8080
CMD ["npm","run","build"]
