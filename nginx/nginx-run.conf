server {
  listen 80 default_server;

  location / {
    rewrite ^/(.*) matchID/$1 permanent;
  }

  location /matchID {
    alias /usr/share/nginx/html/matchID;
    try_files $uri $uri/ @rewrites;    
  }

  location @rewrites {
    rewrite ^(.+)$ /matchID/index.html last;
  }

  location /matchID/static {
    alias /usr/share/nginx/html/static;
  }

  # matchID backend RESTful API
  location ~  (^/matchID/api/.*) {
    proxy_pass http://backend:8081;
    proxy_redirect off;
    proxy_read_timeout 3600;
    proxy_send_timeout 600;
    # Allow large uploads
    client_max_body_size 0;
    # Allow protocol upgrade to websocket
    proxy_http_version 1.1;
    proxy_next_upstream off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }


  # kibana paths
  location ~ ^(/app/|/bundles|/elasticsearch|/status|/api/|/plugins/|/ui/fonts|/es_admin/).* {
    proxy_pass http://kibana:5601;
    proxy_redirect off;
  }


  # elasticsearch API (only used for validation / should be proxied from the backend in the future)
  location ~ .*/(_search|_msearch|_update).* {
    # Deny Nodes Shutdown API
    if ($request_filename ~ "_shutdown") {
      return 403;
      break;
    }

    # Deny access to Cluster API
    if ($request_filename ~ "_cluster") {
      return 403;
      break;
    }

    # Pass requests to ElasticSearch
    proxy_pass http://elasticsearch:9200;
    proxy_redirect off;

    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  Host $http_host;

    # For CORS Ajax
    proxy_pass_header Access-Control-Allow-Origin;
    proxy_pass_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Allow-Headers;

    add_header Access-Control-Allow-Origin '*';
    add_header Access-Control-Allow-Headers 'X-Requested-With, Content-Type';
   }


}
