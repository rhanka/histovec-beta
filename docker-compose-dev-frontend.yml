version: '2'

# this docker configuation is for dev use only

services:
  nginx-dev:
    image: nginx
    container_name: ${APP}-nginx-dev
    depends_on:
      - frontend-dev
    volumes:
      - ${APP_PATH}/nginx/nginx-dev.template:/etc/nginx/conf.d/default.template
      - ${APP_PATH}/nginx/tor-ip.conf:/etc/nginx/tor-ip.conf
      - ${APP_PATH}/nginx/nginx.template:/etc/nginx/nginx.template
      - ${FRONTEND}/static:/usr/share/nginx/html
    ports:
      - ${PORT}:80
    command: /bin/bash -c '(sed "s/<APP>/${APP}/g;s/<dataset>/${dataset}/g;s/<ES_HOST>/${ES_HOST}/g;s|<API_USER_BURST>|${API_USER_BURST}|g;s|<API_GLOBAL_BURST>|${API_GLOBAL_BURST}|g;" < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf) && (sed "s|<API_GLOBAL_LIMIT_RATE>|${API_GLOBAL_LIMIT_RATE}|;s|<API_USER_LIMIT_RATE>|${API_USER_LIMIT_RATE}|g;s|<API_USER_SCOPE>|${API_USER_SCOPE}|g" < /etc/nginx/nginx.template > /etc/nginx/nginx.conf) && nginx -g "daemon off;"'
    restart: always

  frontend-dev:
    build:
      context: ${FRONTEND}
      dockerfile: Dockerfile.dev
      args:
        proxy: ${http_proxy}
        app_path: /${APP}
        app_name: ${APP}
        app_ver: ${APP_VERSION}
    image: ${APP}-frontend-dev:latest
    container_name: ${APP}-frontend-dev
    environment:
      - APP=${APP}
      - APP_VERSION=${APP_VERSION}
    container_name: ${APP}-frontend-dev
    volumes:
      - ${FRONTEND}/index.html:/${APP}/index.html
      - ${FRONTEND}/.babelrc:/${APP}/.babelrc
      - ${FRONTEND}/.editorconfig:/${APP}/.editorconfig
      - ${FRONTEND}/.eslintignore:/${APP}/.eslintignore
      - ${FRONTEND}/.eslintrc.js:/${APP}/.eslintrc.js
      - ${FRONTEND}/config:/${APP}/config/
      - ${FRONTEND}/src:/${APP}/src/
      - ${FRONTEND}/build:/${APP}/build/

networks:
  default:
    external:
      name: ${APP}
